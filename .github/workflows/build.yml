name: Build Kernel With BBRv3

on:
  schedule:
    - cron: 0 16 * * *
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete Old Releases
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 0
          delete_tags: true

      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2
  build:
    needs: cleanup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    env:
      ARCH: ${{ matrix.arch }}
      KERNEL_VERSION: $(curl -s https://www.kernel.org | grep -A 1 -m 1 "stable:" | grep -oP '\d+\.\d+\.\d+')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install git build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync debhelper -y
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Create Directory
        run: mkdir ./kernel/

      - name: Download Kernel source code
        working-directory: ./kernel/
        run: git clone --branch linux-${{ env.KERNEL_VERSION }}.y https://github.com/gregkh/linux.git

      - name: Add Google BBRv3
        working-directory: ./kernel/linux/
        run: |
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout google-bbr/v3

      - name: Set kernel version variables
        working-directory: ./kernel/linux/
        run: |
          IFS='.' read -r version patchlevel sublevel <<< "${{ env.KERNEL_VERSION }}"
          sed -i "s/^VERSION = .*/VERSION = $version/" Makefile
          sed -i "s/^PATCHLEVEL = .*/PATCHLEVEL = $patchlevel/" Makefile
          sed -i "s/^SUBLEVEL = .*/SUBLEVEL = $sublevel/" Makefile

      - name: Setting .config
        working-directory: ./kernel/linux/
        run: |
          curl -sSL https://raw.githubusercontent.com/Naochen2799/Latest-Kernel-BBR3/arm64/.config > .config
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
          else
            make olddefconfig
          fi

      - name: Build Kernel
        working-directory: ./kernel/linux/
        run: |
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bindeb-pkg -j$(nproc)
          else
            make bindeb-pkg -j$(nproc)
          fi

      - name: Upload config
        uses: actions/upload-artifact@v4
        with:
          name: config-${{ matrix.arch }}
          path: ./kernel/linux/.config

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ matrix.arch }}
          path: ./kernel/linux-*.deb

      - name: Upload to release
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{ env.KERNEL_VERSION }}-${{ env.ARCH }}
          files: ./kernel/linux-*.deb
          body: "Latest kernel with BBRv3 for ${{ matrix.arch }} architecture"
