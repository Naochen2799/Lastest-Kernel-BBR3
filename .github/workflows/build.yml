name: Build Kernel With BBRv3

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install git build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync debhelper -y

      - name: Create Directory
        run: mkdir ./kernel/

      - name: Download Kernel source code
        working-directory: ./kernel/
        run: |
          git_version=$(curl -s https://www.kernel.org | grep -A 1 -m 1 "stable:" | grep -oP '\d+\.\d+' )
          git clone --single-branch --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --branch linux-$git_version.y

      - name: Add Google BBRv3
        working-directory: ./kernel/linux/
        run: |
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout google-bbr/v3

      - name: Set kernel version variables
        working-directory: ./kernel/linux/
        run: |
          latest_version=$(curl -s https://www.kernel.org | grep -A 1 -m 1 "stable:" | grep -oP '\d+\.\d+\.\d+')
          version=$(echo ${latest_version} | cut -d. -f1)
          patchlevel=$(echo ${latest_version} | cut -d. -f2)
          sublevel=$(echo ${latest_version} | cut -d. -f3)
          sed -i "s/VERSION = .*/VERSION = $version/" Makefile
          sed -i "s/PATCHLEVEL = .*/PATCHLEVEL = $patchlevel/" Makefile
          sed -i "s/SUBLEVEL = .*/SUBLEVEL = $sublevel/" Makefile

      - name: Setting .config
        working-directory: ./kernel/linux/
        run: |
          cp -v /boot/config-$(uname -r) .config
          scripts/config --enable TCP_CONG_BBR
          scripts/config --enable TCP_CONG_BBR1
          scripts/config --disable DEBUG_INFO
          scripts/config --set-str SYSTEM_TRUSTED_KEYS ""

      - name: Build Kernel
        working-directory: ./kernel/linux/
        run: |
          CPU_CORES=$(($(grep -c processor < /proc/cpuinfo)*2))
          make clean
          make deb-pkg -j"$CPU_CORES"

      - name: Upload config
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: ./kernel/linux/.config

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: ./kernel/linux-*.deb
